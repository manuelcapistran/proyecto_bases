
CREATE OR REPLACE TRIGGER TR_NOTIFICACION_REPORTE_EMISIONES FOR
    INSERT ON REPORTE_EMISIONES
COMPOUND TRIGGER
    TYPE REPORTE_EMISIONES_TYPE IS RECORD(
        REPORTE_EMISIONES_ID REPORTE_EMISIONES.REPORTE_EMISIONES_ID%TYPE,
        FECHA_REGISTRO REPORTE_EMISIONES.FECHA_REGISTRO%TYPE,
        VALOR_MEDIDO REPORTE_EMISIONES.VALOR_MEDIDO%TYPE,
        GAS_ID REPORTE_EMISIONES.GAS_ID%TYPE,
        VEHICULO_ID REPORTE_EMISIONES.VEHICULO_ID%TYPE
    );
    TYPE REPORTES_EMISIONES_TYPE IS
        TABLE OF REPORTE_EMISIONES_TYPE;
    REPORTES_EMISIONES REPORTES_EMISIONES_TYPE := REPORTES_EMISIONES_TYPE();

    BEFORE EACH ROW IS
        V_INDEX NUMBER;
    BEGIN
        REPORTES_EMISIONES.EXTEND;
        V_INDEX:=REPORTES_EMISIONES.LAST;
        REPORTES_EMISIONES(V_INDEX).REPORTE_EMISIONES_ID := :NEW.REPORTE_EMISIONES_ID;
        REPORTES_EMISIONES(V_INDEX).FECHA_REGISTRO := :NEW.FECHA_REGISTRO;
        REPORTES_EMISIONES(V_INDEX).VALOR_MEDIDO := :NEW.VALOR_MEDIDO;
        REPORTES_EMISIONES(V_INDEX).GAS_ID := :NEW.GAS_ID;
        REPORTES_EMISIONES(V_INDEX).VEHICULO_ID := :NEW.VEHICULO_ID;
    END BEFORE EACH ROW;

    AFTER STATEMENT IS
        V_NIVELES_PERMITIDOS_GAS GAS.NIVELES_PERMITIDOS%TYPE;
        V_NOTIFICACION_ID        NOTIFICACION.NOTIFICACION_ID%TYPE;
        V_NUM_NOTIFICACIONES NUMBER;
        V_REPORTE_EMISIONES_ID REPORTE_EMISIONES.REPORTE_EMISIONES_ID%TYPE;
    BEGIN
        FOR I IN REPORTES_EMISIONES.FIRST .. REPORTES_EMISIONES.LAST LOOP
            
            SELECT
                G.NIVELES_PERMITIDOS INTO V_NIVELES_PERMITIDOS_GAS
            FROM
                GAS G
            WHERE
                REPORTES_EMISIONES(I).GAS_ID = G.GAS_ID;
            IF REPORTES_EMISIONES(I).VALOR_MEDIDO > V_NIVELES_PERMITIDOS_GAS THEN
                V_REPORTE_EMISIONES_ID := REPORTES_EMISIONES(I).REPORTE_EMISIONES_ID;
                SELECT COUNT(*) INTO V_NUM_NOTIFICACIONES
                FROM(
                    SELECT
                        NT.NOTIFICACION_ID
                    FROM
                        NOTIFICACION                   NT
                        JOIN REPORTE_EMISIONES_NOTIFICACION REN
                        ON NT.NOTIFICACION_ID = REN.NOTIFICACION_ID
                        JOIN REPORTE_EMISIONES RE
                        ON RE.REPORTE_EMISIONES_ID = REN.REPORTE_EMISIONES_ID
                    WHERE
                        NT.FECHA_ENVIO = REPORTES_EMISIONES(I).FECHA_REGISTRO
                        AND REPORTES_EMISIONES(I).VEHICULO_ID = RE.VEHICULO_ID
                    GROUP BY
                        NT.NOTIFICACION_ID
                );
                
                IF V_NUM_NOTIFICACIONES = 0 THEN
                    PR_INSERTAR_NOTIFICACION(REPORTES_EMISIONES(I).FECHA_REGISTRO, REPORTES_EMISIONES(I).VEHICULO_ID, V_NOTIFICACION_ID);
                    UPDATE VEHICULO
                    SET
                        ESTATUS_VEHICULO_ID = 4
                    WHERE
                        VEHICULO_ID = REPORTES_EMISIONES(I).VEHICULO_ID;
                ELSE 
                    SELECT
                        NT.NOTIFICACION_ID INTO V_NOTIFICACION_ID
                    FROM
                        NOTIFICACION                   NT
                        JOIN REPORTE_EMISIONES_NOTIFICACION REN
                        ON NT.NOTIFICACION_ID = REN.NOTIFICACION_ID
                        JOIN REPORTE_EMISIONES RE
                        ON RE.REPORTE_EMISIONES_ID = REN.REPORTE_EMISIONES_ID
                    WHERE
                        NT.FECHA_ENVIO = REPORTES_EMISIONES(I).FECHA_REGISTRO
                        AND REPORTES_EMISIONES(I).VEHICULO_ID = RE.VEHICULO_ID
                    GROUP BY
                        NT.NOTIFICACION_ID;
                END IF;

               
                INSERT INTO REPORTE_EMISIONES_NOTIFICACION(
                        REPORTE_EMISIONES_ID,
                        NOTIFICACION_ID
                ) VALUES(
                        REPORTES_EMISIONES(I).REPORTE_EMISIONES_ID,
                        V_NOTIFICACION_ID      
                );
            END IF;
        END LOOP;
    END AFTER STATEMENT;
END;
/
SHOW ERRORS;